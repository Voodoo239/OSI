#!/bin/bash

# Инициализация полей
field=($(printf '0 %.0s' {1..20}))  # Мое поле
enemy_field=($(printf '0 %.0s' {1..20}))  # Поле противника для отслеживания
enemy_hits=0  # Счетчик попаданий по противнику
my_hits=0     # Счетчик попаданий по моему полю
enemy_ships=9 # Количество неподбитых клеток противника
checked=($(printf '0 %.0s' {1..20}))  # Отслеживание проверенных клеток
last_hit=-1   # Позиция последнего попадания (-1 означает нет попадания)

# Функция для случайного размещения кораблей
place_ships() {
    # Однопалубный
    pos=$((RANDOM % 20))
    field[$pos]=1
    # Двухпалубный
    while true; do
        pos=$((RANDOM % 19))
        if [ ${field[$pos]} -eq 0 ] && [ ${field[$((pos+1))]} -eq 0 ]; then
            field[$pos]=1
            field[$((pos+1))]=1
            break
        fi
    done
    # Первый трехпалубный
    while true; do
        pos=$((RANDOM % 18))
        if [ ${field[$pos]} -eq 0 ] && [ ${field[$((pos+1))]} -eq 0 ] && [ ${field[$((pos+2))]} -eq 0 ]; then
            field[$pos]=1
            field[$((pos+1))]=1
            field[$((pos+2))]=1
            break
        fi
    done
    # Второй трехпалубный
    while true; do
        pos=$((RANDOM % 18))
        if [ ${field[$pos]} -eq 0 ] && [ ${field[$((pos+1))]} -eq 0 ] && [ ${field[$((pos+2))]} -eq 0 ]; then
            field[$pos]=1
            field[$((pos+1))]=1
            field[$((pos+2))]=1
            break
        fi
    done
}

# Функция проверки, потоплен ли корабль вокруг позиции
check_sunk() {
    local pos=$1
    # Считаем, сколько клеток корабля осталось вокруг позиции
    local count=1  # Сама клетка уже подбита
    local i=$pos
    # Ищем влево
    while [ $i -gt 0 ]; do
        i=$((i-1))
        if [ ${enemy_field[$i]} -eq 2 ]; then
            count=$((count+1))
        elif [ ${enemy_field[$i]} -eq 0 ] || [ ${enemy_field[$i]} -eq 3 ]; then
            break
        fi
    done
    # Ищем вправо
    i=$pos
    while [ $i -lt 19 ]; do
        i=$((i+1))
        if [ ${enemy_field[$i]} -eq 2 ]; then
            count=$((count+1))
        elif [ ${enemy_field[$i]} -eq 0 ] || [ ${enemy_field[$i]} -eq 3 ]; then
            break
        fi
    done
    # Если рядом нет неподбитых клеток, корабль потоплен
    i=$pos
    local sunk=1
    if [ $i -gt 0 ]; then
        i=$((i-1))
        if [ ${enemy_field[$i]} -eq 0 ] && [ ${checked[$i]} -eq 0 ]; then
            sunk=0
        fi
    fi
    i=$pos
    if [ $i -lt 19 ]; then
        i=$((i+1))
        if [ ${enemy_field[$i]} -eq 0 ] && [ ${checked[$i]} -eq 0 ]; then
            sunk=0
        fi
    fi
    if [ $sunk -eq 1 ]; then
        echo "Player 1: Ship sunk at $pos (size $count)" | tee -a game.log
        last_hit=-1
    fi
    return $sunk
}

# Функция для выбора выстрела
shoot() {
    # Если есть недавнее попадание, пытаемся добить корабль
    if [ $last_hit -ne -1 ]; then
        i=$last_hit
        if [ $i -gt 0 ] && [ ${checked[$((i-1))]} -eq 0 ]; then
            checked[$((i-1))]=1
            echo $((i-1))
            return
        fi
        if [ $i -lt 19 ] && [ ${checked[$((i+1))]} -eq 0 ]; then
            checked[$((i+1))]=1
            echo $((i+1))
            return
        fi
    fi

    # Случайный выстрел в непроверенную клетку
    while true; do
        pos=$((RANDOM % 20))
        if [ ${checked[$pos]} -eq 0 ]; then
            checked[$pos]=1
            echo $pos
            return
        fi
        # Проверка на случай, если все клетки проверены
        all_checked=1
        for i in {0..19}; do
            if [ ${checked[$i]} -eq 0 ]; then
                all_checked=0
                break
            fi
        done
        if [ $all_checked -eq 1 ]; then
            echo "Error: All cells checked but game not finished!" | tee -a game.log
            echo "QUIT" > pipe1
            exit 1
        fi
    done
}

# Размещаем корабли
place_ships

# Основной цикл игры
echo "Player 1: My PID is $$" | tee -a game.log
while true; do
    # Мой ход
    shot=$(shoot)
    echo "Player 1 shoots at $shot" | tee -a game.log
    echo "$shot" > pipe1  # Отправляем выстрел

    # Ждем ответа от Player 2
    read result < pipe2
    if [ "$result" = "QUIT" ]; then
        echo "Player 1: Received QUIT, exiting" | tee -a game.log
        break
    fi
    if [ "$result" = "hit" ]; then
        enemy_hits=$((enemy_hits + 1))
        enemy_ships=$((enemy_ships - 1))
        enemy_field[$shot]=2  # Отмечаем попадание
        last_hit=$shot
        echo "Player 1: Hit! Enemy ships left: $enemy_ships" | tee -a game.log
        # Проверяем, потоплен ли корабль
        check_sunk $shot
    else
        echo "Player 1: Miss" | tee -a game.log
        enemy_field[$shot]=3  # Отмечаем промах
        last_hit=-1
    fi

    # Проверяем победу
    if [ $enemy_hits -eq 9 ]; then
        echo "Player 1 wins!" | tee -a game.log
        echo "QUIT" > pipe1
        break
    fi

    # Ждем выстрел от Player 2
    read enemy_shot < pipe1
    if [ "$enemy_shot" = "QUIT" ]; then
        echo "Player 1: Received QUIT, exiting" | tee -a game.log
        break
    fi
    echo "Player 2 shoots at $enemy_shot" | tee -a game.log
    if [ ${field[$enemy_shot]} -eq 1 ]; then
        echo "hit" > pipe2
        field[$enemy_shot]=2
        my_hits=$((my_hits + 1))
        echo "Player 1: Hit on my field at $enemy_shot" | tee -a game.log
    else
        echo "miss" > pipe2
        field[$enemy_shot]=3
        echo "Player 1: Miss on my field at $enemy_shot" | tee -a game.log
    fi

    # Проверяем поражение
    if [ $my_hits -eq 9 ]; then
        echo "Player 2 wins!" | tee -a game.log
        echo "QUIT" > pipe2
        break
    fi
done
