#!/bin/bash

# Инициализация полей
field=($(printf '0 %.0s' {1..20}))  # Мое поле
enemy_field=($(printf '0 %.0s' {1..20}))  # Поле противника
enemy_hits=0  # Счетчик попаданий по противнику
my_hits=0     # Счетчик попаданий по моему полю
enemy_ships_left=9  # Осталось неподбитых клеток
checked=($(printf '0 %.0s' {1..20}))  # Проверенные клетки
last_hit=-1  # Последняя клетка, в которую попали

# Функция для размещения кораблей
place_ships() {
    pos=$((RANDOM % 20))
    field[$pos]=1
    while true; do
        pos=$((RANDOM % 19))
        if [ ${field[$pos]} -eq 0 ] && [ ${field[$((pos+1))]} -eq 0 ]; then
            field[$pos]=1
            field[$((pos+1))]=1
            break
        fi
    done
    while true; do
        pos=$((RANDOM % 18))
        if [ ${field[$pos]} -eq 0 ] && [ ${field[$((pos+1))]} -eq 0 ] && [ ${field[$((pos+2))]} -eq 0 ]; then
            field[$pos]=1
            field[$((pos+1))]=1
            field[$((pos+2))]=1
            break
        fi
    done
    while true; do
        pos=$((RANDOM % 18))
        if [ ${field[$pos]} -eq 0 ] && [ ${field[$((pos+1))]} -eq 0 ] && [ ${field[$((pos+2))]} -eq 0 ]; then
            field[$pos]=1
            field[$((pos+1))]=1
            field[$((pos+2))]=1
            break
        fi
    done
}

# Функция для выбора выстрела
shoot() {
    # Если есть последнее попадание, пытаемся добить корабль
    if [ $last_hit -ne -1 ]; then
        # Проверяем соседние клетки
        local left=$((last_hit - 1))
        local right=$((last_hit + 1))
        if [ $left -ge 0 ] && [ ${checked[$left]} -eq 0 ] && [ ${enemy_field[$left]} -ne 3 ]; then
            checked[$left]=1
            echo $left
            return
        fi
        if [ $right -lt 20 ] && [ ${checked[$right]} -eq 0 ] && [ ${enemy_field[$right]} -ne 3 ]; then
            checked[$right]=1
            echo $right
            return
        fi
        # Если не нашли подходящих клеток рядом, сбрасываем last_hit
        last_hit=-1
    fi

    # Случайный выстрел
    while true; do
        pos=$((RANDOM % 20))
        if [ ${checked[$pos]} -eq 0 ] && [ ${enemy_field[$pos]} -ne 3 ]; then
            checked[$pos]=1
            echo $pos
            return
        fi
        all_checked=1
        for i in {0..19}; do
            if [ ${checked[$i]} -eq 0 ] && [ ${enemy_field[$i]} -ne 3 ]; then
                all_checked=0
                break
            fi
        done
        if [ $all_checked -eq 1 ]; then
            echo "Error: All valid cells checked but game not finished!" >> game.log
            echo "QUIT" > pipe1
            exit 1
        fi
    done
}

# Размещаем корабли
place_ships

# Основной цикл игры
echo "Player 1: My PID is $$" | tee -a game.log
while true; do
    shot=$(shoot)
    echo "Player 1 shoots at $shot" | tee -a game.log
    echo "$shot" > pipe1

    read result < pipe2
    if [ "$result" = "QUIT" ]; then
        echo "Player 1: Received QUIT, exiting" | tee -a game.log
        break
    fi
    if [ "$result" = "hit" ]; then
        enemy_hits=$((enemy_hits + 1))
        enemy_ships_left=$((enemy_ships_left - 1))
        last_hit=$shot
        enemy_field[$shot]=2
        echo "Player 1: Hit! Enemy ships left: $enemy_ships_left" | tee -a game.log
    else
        last_hit=-1
        enemy_field[$shot]=3
        echo "Player 1: Miss" | tee -a game.log
    fi

    if [ $enemy_hits -eq 9 ]; then
        echo "Player 1 wins!" | tee -a game.log
        echo "QUIT" > pipe1
        break
    fi

    read enemy_shot < pipe1
    if [ "$enemy_shot" = "QUIT" ]; then
        echo "Player 1: Received QUIT, exiting" | tee -a game.log
        break
    fi
    echo "Player 2 shoots at $enemy_shot" | tee -a game.log
    if [ ${field[$enemy_shot]} -eq 1 ]; then
        echo "hit" > pipe2
        field[$enemy_shot]=2
        my_hits=$((my_hits + 1))
        echo "Player 1: Hit on my field at $enemy_shot" | tee -a game.log
    else
        echo "miss" > pipe2
        field[$enemy_shot]=3
        echo "Player 1: Miss on my field at $enemy_shot" | tee -a game.log
    fi

    if [ $my_hits -eq 9 ]; then
        echo "Player 2 wins!" | tee -a game.log
        echo "QUIT" > pipe2
        break
    fi
done
